#usda 1.0
(
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

reorder rootPrims = ["Root", "_GridMaterial"]

def Xform "Root"
{
    reorder nameChildren = ["Sphere_1", "Sphere_2", "Sphere_3", "Material", "Material_1", "Cube_1", "Cube_2", "Cube_3", "Cube_4", "_99D0EEF8_A6E6_45E9_B203_993306073F5F", "Cube"]
    def Sphere "Sphere_2" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/Material_1> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double radius = 0.05
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0.001, 1.8, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "RigidBody"
        {
            float angularDamping = 0.1
            uniform token info:id = "RealityKit.RigidBody"
            bool isCCDEnabled = 1
            float linearDamping = 0.1

            def RealityKitStruct "massFrame"
            {
                float m_mass = 250

                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
                double dynamicFriction = 0.6
                double restitution = 0.1
                double staticFriction = 0.1
            }
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.2, 0.2, 0.2)
                float radius = 0.05
                token shapeType = "Sphere"
            }
        }

        def RealityKitComponent "MotionState"
        {
            uniform token info:id = "RealityKit.MotionState"
        }
    }

    def Sphere "Sphere_1" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/Material> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double radius = 0.1
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 1.5, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "RigidBody"
        {
            float angularDamping = 0.1
            uniform token info:id = "RealityKit.RigidBody"
            bool isCCDEnabled = 1
            float linearDamping = 0.1

            def RealityKitStruct "massFrame"
            {
                float m_mass = 2000

                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
                double dynamicFriction = 0.1
                double restitution = 0.1
                double staticFriction = 0.1
            }
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.2, 0.2, 0.2)
                float radius = 0.1
                token shapeType = "Sphere"
            }
        }

        def RealityKitComponent "MotionState"
        {
            uniform token info:id = "RealityKit.MotionState"
        }
    }

    def Sphere "Sphere_3" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/Material> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double radius = 0.1
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0.8, 1, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "RigidBody"
        {
            float angularDamping = 0.1
            uniform token info:id = "RealityKit.RigidBody"
            bool isCCDEnabled = 1
            float linearDamping = 0.1

            def RealityKitStruct "massFrame"
            {
                float m_mass = 200

                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
                double dynamicFriction = 0.1
                double restitution = 0.1
                double staticFriction = 0.1
            }
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.2, 0.2, 0.2)
                float radius = 0.1
                token shapeType = "Sphere"
            }
        }

        def RealityKitComponent "MotionState"
        {
            uniform token info:id = "RealityKit.MotionState"
        }
    }

    def Material "Material"
    {
        token outputs:mtlx:surface
        token outputs:realitykit:vertex
        prepend token outputs:surface.connect = </Root/Material/UsdPreviewSurface.outputs:surface>

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:emissiveColor = (0, 0.5603183, 0) (
                colorSpace = "srgb_texture"
            )
            token outputs:surface
        }
    }

    def Material "Material_1"
    {
        token outputs:mtlx:surface
        token outputs:realitykit:vertex
        prepend token outputs:surface.connect = </Root/Material_1/UsdPreviewSurface.outputs:surface>

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:emissiveColor = (0.016804177, 0.198351, 1) (
                colorSpace = "srgb_texture"
            )
            token outputs:surface
        }
    }

    def Xform "Group" (
        active = true
    )
    {
        def Cube "Cube_1" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Group/Cube_1/DefaultMaterial> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.2
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (14, 0.2, 5)
            float3 xformOp:translate = (0, 0.35, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                token outputs:surface.connect = </Root/Group/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    color3f inputs:emissiveColor = (1, 0.57810515, 0) (
                        colorSpace = "srgb_texture"
                    )
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }

            def RealityKitComponent "RigidBody"
            {
                float angularDamping = 0.1
                bool gravityEnabled = 0
                uniform token info:id = "RealityKit.RigidBody"
                bool isCCDEnabled = 1
                float linearDamping = 0.1
                token motionType = "Static"

                def RealityKitStruct "massFrame"
                {
                    float m_mass = 300

                    def RealityKitStruct "m_pose"
                    {
                    }
                }

                def RealityKitStruct "material"
                {
                    double dynamicFriction = 0.5
                    double restitution = 1
                    double staticFriction = 0.5
                }
            }

            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (0.2, 0.2, 0.2)
                    token shapeType = "Box"
                }
            }
        }

        def Cube "Cube_2" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Group/Cube_2/DefaultMaterial> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.2
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.5, 0.5, 5)
            float3 xformOp:translate = (1.35, 0.42, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                token outputs:surface.connect = </Root/Group/Cube_2/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    color3f inputs:emissiveColor = (1, 0.57810515, 0) (
                        colorSpace = "srgb_texture"
                    )
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }

            def RealityKitComponent "RigidBody"
            {
                float angularDamping = 0.1
                bool gravityEnabled = 0
                uniform token info:id = "RealityKit.RigidBody"
                bool isCCDEnabled = 1
                float linearDamping = 0.1
                token motionType = "Static"

                def RealityKitStruct "massFrame"
                {
                    float m_mass = 300

                    def RealityKitStruct "m_pose"
                    {
                    }
                }

                def RealityKitStruct "material"
                {
                    double dynamicFriction = 0.5
                    double restitution = 1
                    double staticFriction = 0.5
                }
            }

            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (0.2, 0.2, 0.2)
                    token shapeType = "Box"
                }
            }
        }

        def Cube "Cube_3" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Group/Cube_3/DefaultMaterial> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.2
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (14, 0.5, 0.5)
            float3 xformOp:translate = (0, 0.42, -0.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                token outputs:surface.connect = </Root/Group/Cube_3/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    color3f inputs:emissiveColor = (1, 0.57810515, 0) (
                        colorSpace = "srgb_texture"
                    )
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }

            def RealityKitComponent "RigidBody"
            {
                float angularDamping = 0.1
                bool gravityEnabled = 0
                uniform token info:id = "RealityKit.RigidBody"
                bool isCCDEnabled = 1
                float linearDamping = 0.1
                token motionType = "Static"

                def RealityKitStruct "massFrame"
                {
                    float m_mass = 300

                    def RealityKitStruct "m_pose"
                    {
                    }
                }

                def RealityKitStruct "material"
                {
                    double dynamicFriction = 0.5
                    double restitution = 1
                    double staticFriction = 0.5
                }
            }

            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (0.2, 0.2, 0.2)
                    token shapeType = "Box"
                }
            }
        }

        def Cube "Cube_4" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Group/Cube_4/DefaultMaterial> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.2
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (14, 0.5, 0.5)
            float3 xformOp:translate = (0, 0.42, 0.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                token outputs:surface.connect = </Root/Group/Cube_4/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    color3f inputs:emissiveColor = (1, 0.57810515, 0) (
                        colorSpace = "srgb_texture"
                    )
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }

            def RealityKitComponent "RigidBody"
            {
                float angularDamping = 0.1
                bool gravityEnabled = 0
                uniform token info:id = "RealityKit.RigidBody"
                bool isCCDEnabled = 1
                float linearDamping = 0.1
                token motionType = "Static"

                def RealityKitStruct "massFrame"
                {
                    float m_mass = 300

                    def RealityKitStruct "m_pose"
                    {
                    }
                }

                def RealityKitStruct "material"
                {
                    double dynamicFriction = 0.5
                    double restitution = 1
                    double staticFriction = 0.5
                }
            }

            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (0.2, 0.2, 0.2)
                    token shapeType = "Box"
                }
            }
        }

        def Cube "Cube" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Group/Cube/DefaultMaterial> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.2
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.5, 0.5, 5)
            float3 xformOp:translate = (-1.35, 0.42, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                prepend token outputs:surface.connect = </Root/Group/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    color3f inputs:emissiveColor = (1, 0.57810515, 0) (
                        colorSpace = "srgb_texture"
                    )
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }

            def RealityKitComponent "RigidBody"
            {
                float angularDamping = 0.1
                bool gravityEnabled = 0
                uniform token info:id = "RealityKit.RigidBody"
                bool isCCDEnabled = 1
                float linearDamping = 0.1
                token motionType = "Static"

                def RealityKitStruct "massFrame"
                {
                    float m_mass = 300

                    def RealityKitStruct "m_pose"
                    {
                    }
                }

                def RealityKitStruct "material"
                {
                    double dynamicFriction = 0.5
                    double restitution = 1
                    double staticFriction = 0.5
                }
            }

            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (0.2, 0.2, 0.2)
                    token shapeType = "Box"
                }
            }
        }
    }

    def Xform "Group_1" (
        active = true
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 0, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Cube "Cube_1" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Group_1/Cube_1/DefaultMaterial> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.2
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (14, 0.2, 5)
            float3 xformOp:translate = (0, 0.35, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                token outputs:surface.connect = </Root/Group_1/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    color3f inputs:emissiveColor = (1, 0.57810515, 0) (
                        colorSpace = "srgb_texture"
                    )
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }

            def RealityKitComponent "RigidBody"
            {
                float angularDamping = 0.1
                bool gravityEnabled = 0
                uniform token info:id = "RealityKit.RigidBody"
                bool isCCDEnabled = 1
                float linearDamping = 0.1
                token motionType = "Static"

                def RealityKitStruct "massFrame"
                {
                    float m_mass = 300

                    def RealityKitStruct "m_pose"
                    {
                    }
                }

                def RealityKitStruct "material"
                {
                    double dynamicFriction = 0.5
                    double restitution = 1
                    double staticFriction = 0.5
                }
            }

            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (0.2, 0.2, 0.2)
                    token shapeType = "Box"
                }
            }
        }

        def Cube "Cube_2" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Group_1/Cube_2/DefaultMaterial> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.2
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.5, 0.5, 5)
            float3 xformOp:translate = (1.35, 0.42, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                token outputs:surface.connect = </Root/Group_1/Cube_2/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    color3f inputs:emissiveColor = (1, 0.57810515, 0) (
                        colorSpace = "srgb_texture"
                    )
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }

            def RealityKitComponent "RigidBody"
            {
                float angularDamping = 0.1
                bool gravityEnabled = 0
                uniform token info:id = "RealityKit.RigidBody"
                bool isCCDEnabled = 1
                float linearDamping = 0.1
                token motionType = "Static"

                def RealityKitStruct "massFrame"
                {
                    float m_mass = 300

                    def RealityKitStruct "m_pose"
                    {
                    }
                }

                def RealityKitStruct "material"
                {
                    double dynamicFriction = 0.5
                    double restitution = 1
                    double staticFriction = 0.5
                }
            }

            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (0.2, 0.2, 0.2)
                    token shapeType = "Box"
                }
            }
        }

        def Cube "Cube_3" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Group_1/Cube_3/DefaultMaterial> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.2
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (14, 0.5, 0.5)
            float3 xformOp:translate = (0, 0.42, -0.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                token outputs:surface.connect = </Root/Group_1/Cube_3/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    color3f inputs:emissiveColor = (1, 0.57810515, 0) (
                        colorSpace = "srgb_texture"
                    )
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }

            def RealityKitComponent "RigidBody"
            {
                float angularDamping = 0.1
                bool gravityEnabled = 0
                uniform token info:id = "RealityKit.RigidBody"
                bool isCCDEnabled = 1
                float linearDamping = 0.1
                token motionType = "Static"

                def RealityKitStruct "massFrame"
                {
                    float m_mass = 300

                    def RealityKitStruct "m_pose"
                    {
                    }
                }

                def RealityKitStruct "material"
                {
                    double dynamicFriction = 0.5
                    double restitution = 1
                    double staticFriction = 0.5
                }
            }

            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (0.2, 0.2, 0.2)
                    token shapeType = "Box"
                }
            }
        }

        def Cube "Cube_4" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Group_1/Cube_4/DefaultMaterial> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.2
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (14, 0.5, 0.5)
            float3 xformOp:translate = (0, 0.42, 0.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                token outputs:surface.connect = </Root/Group_1/Cube_4/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    color3f inputs:emissiveColor = (1, 0.57810515, 0) (
                        colorSpace = "srgb_texture"
                    )
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }

            def RealityKitComponent "RigidBody"
            {
                float angularDamping = 0.1
                bool gravityEnabled = 0
                uniform token info:id = "RealityKit.RigidBody"
                bool isCCDEnabled = 1
                float linearDamping = 0.1
                token motionType = "Static"

                def RealityKitStruct "massFrame"
                {
                    float m_mass = 300

                    def RealityKitStruct "m_pose"
                    {
                    }
                }

                def RealityKitStruct "material"
                {
                    double dynamicFriction = 0.5
                    double restitution = 1
                    double staticFriction = 0.5
                }
            }

            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (0.2, 0.2, 0.2)
                    token shapeType = "Box"
                }
            }
        }

        def Cube "Cube" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Group_1/Cube/DefaultMaterial> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.2
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.5, 0.5, 5)
            float3 xformOp:translate = (-1.35, 0.42, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                token outputs:surface.connect = </Root/Group_1/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    color3f inputs:emissiveColor = (1, 0.57810515, 0) (
                        colorSpace = "srgb_texture"
                    )
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }

            def RealityKitComponent "RigidBody"
            {
                float angularDamping = 0.1
                bool gravityEnabled = 0
                uniform token info:id = "RealityKit.RigidBody"
                bool isCCDEnabled = 1
                float linearDamping = 0.1
                token motionType = "Static"

                def RealityKitStruct "massFrame"
                {
                    float m_mass = 300

                    def RealityKitStruct "m_pose"
                    {
                    }
                }

                def RealityKitStruct "material"
                {
                    double dynamicFriction = 0.5
                    double restitution = 1
                    double staticFriction = 0.5
                }
            }

            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (0.2, 0.2, 0.2)
                    token shapeType = "Box"
                }
            }
        }
    }

    def Cube "Cube" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/Material_1> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double size = 0.2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (-0.5, 1, 0.6)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            prepend token outputs:surface.connect = </Root/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "RigidBody"
        {
            uniform token info:id = "RealityKit.RigidBody"

            def RealityKitStruct "massFrame"
            {
                float m_mass = 1000

                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
            }
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.2, 0.2, 0.2)
                token shapeType = "Box"
            }
        }

        def RealityKitComponent "MotionState"
        {
            uniform token info:id = "RealityKit.MotionState"
        }
    }

    def Capsule "Capsule" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
        customData = {
            float3 rotationEulerHint = (0, 0, 0.5235988)
        }
    )
    {
        uniform token axis = "Y"
        double height = 0.2
        rel material:binding = </Root/Material_2> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double radius = 0.1
        quatf xformOp:orient = (0.9659258, 0, 0, 0.25881904)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0.5, 1, 0.7)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            prepend token outputs:surface.connect = </Root/Capsule/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.2, 0.4, 0.20000002)
                float height = 0.4
                float radius = 0.10000001
                token shapeType = "Capsule"
            }
        }

        def RealityKitComponent "RigidBody"
        {
            float angularDamping = 0.1
            uniform token info:id = "RealityKit.RigidBody"
            float linearDamping = 0.1

            def RealityKitStruct "massFrame"
            {
                float m_mass = 2000

                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
                double dynamicFriction = 0.1
                double restitution = 0.1
                double staticFriction = 0.1
            }
        }
    }

    def Material "Material_2"
    {
        token outputs:mtlx:surface
        token outputs:realitykit:vertex
        prepend token outputs:surface.connect = </Root/Material_2/UsdPreviewSurface.outputs:surface>

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (1, 0.14913142, 0) (
                colorSpace = "srgb_texture"
            )
            token outputs:surface
        }
    }

    def Cube "Cube_1" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/Material_2> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double size = 0.05
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (-0.1307857, 1, 0.9562725)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "RigidBody"
        {
            uniform token info:id = "RealityKit.RigidBody"

            def RealityKitStruct "massFrame"
            {
                float m_mass = 1000

                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
            }
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.05, 0.05, 0.05)
                token shapeType = "Box"
            }
        }

        def RealityKitComponent "MotionState"
        {
            uniform token info:id = "RealityKit.MotionState"
        }
    }

    def Cube "Cube_2" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/Material_2> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double size = 0.05
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (-0.36246282, 1, 0.9562725)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/Cube_2/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "RigidBody"
        {
            uniform token info:id = "RealityKit.RigidBody"

            def RealityKitStruct "massFrame"
            {
                float m_mass = 1000

                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
            }
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.05, 0.05, 0.05)
                token shapeType = "Box"
            }
        }

        def RealityKitComponent "MotionState"
        {
            uniform token info:id = "RealityKit.MotionState"
        }
    }

    def Cube "Cube_3" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/Material_2> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double size = 0.05
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (-0.6023226, 1, 0.9562725)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/Cube_3/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "RigidBody"
        {
            uniform token info:id = "RealityKit.RigidBody"

            def RealityKitStruct "massFrame"
            {
                float m_mass = 1000

                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
            }
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.05, 0.05, 0.05)
                token shapeType = "Box"
            }
        }

        def RealityKitComponent "MotionState"
        {
            uniform token info:id = "RealityKit.MotionState"
        }
    }

    def Capsule "Capsule_1" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
        customData = {
            float3 rotationEulerHint = (0, 0, 0.5235988)
        }
    )
    {
        uniform token axis = "Y"
        double height = 0.1
        rel material:binding = </Root/Material> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double radius = 0.05
        quatf xformOp:orient = (0.9659258, 0, 0, 0.2588191)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0.07440877, 0.7542874, 0.7)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:surface.connect = </Root/Capsule_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.2, 0.4, 0.20000002)
                float height = 0.2
                float radius = 0.050000004
                token shapeType = "Capsule"
            }
        }

        def RealityKitComponent "RigidBody"
        {
            float angularDamping = 0.1
            uniform token info:id = "RealityKit.RigidBody"
            float linearDamping = 0.1

            def RealityKitStruct "massFrame"
            {
                float m_mass = 2000

                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
                double dynamicFriction = 0.1
                double restitution = 0.1
                double staticFriction = 0.1
            }
        }
    }
}

